package bird;

//Duck은 Bird와 같은 자료형이다!!
public class Duck extends Bird{
						// is a 오리는 새다

	public void fly(){ //부모클래스에 이미 fly()란 메서드가 정의되어있다고 하더라도 자식클래스에
							 //부모와 완전동일한 메서드 정의를 허용해주는 기법을 가리켜 Override라 한다!!
							 //왜 자식은 부모의 메서드를 재정의해야 하는가?
							 //부모에서 정의한 메서드가 현재 상황에 맞지 않거나, 업무가 변했을때
							 //업그레이드가 요구되기 때문임..
							 //주의) 오버로딩과의 차이점???
							 //오버로딩 : 하나의 클래스 내에서 메서드명을 동일하게 중복정의 하는기법
							 //				 (메서드명은 비록 동일하지만, 너무 똑같으면 에러가 발생하므로,
							 //				  즉 구분이 안되므로 매게변수의 종류, 개수로 구분)
							 //오버라이딩 : 상속관계에서 자식이 부모와 완전 100% 동일한 메서드를 정의하는기법
							 //이때 자식은 부모의 메서드를 업그레이드한것으로 본다!!
			System.out.println("오리가 납니다");
	}

	public static void main(String[] args){
		//Brid b = new Bird();
		//b.fly(); 새가납니다

		/*
		객체지향 언어의 특징
		1)상속 : 코드의 재사용 및 같은 종류의 자료형으로 정의하는 기법
		2)추상화 : 복잡한 로직의 간략화로 객체 정의
		3)캡슐화 : 데이터는 보호하고, 보호된 데이터에 대해 공개된 메서드를 정의하는 기법
		4)다형성 : 상위 객체를 이용하여, 하위 객체의 메서드를 호출하는 기법
		
		다형성때문에 헷갈릴 경우
		원칙 : 자료형을 따라가자!!
		예외 : 메서드에 한해서는, 자식이 재정의한 메서드를 업그레이드로 간주하기때문에, 자료형이 부모형이라할지라도
				자식의 메서드를 호출!!(구현력이 자식에게 미친다...)
		*/
		Bird x = new Duck(); 
		x.name ="aaaa"; // Bird의 이름
		x.fly(); // 오리가납니다 호출 why? 다형성때문에... 중요!!! 업그레이드로간주

		// Duck y = new Bird(); 이 경우는? 말도안됨 모든 오리는 새가 아니기때문에
		/*
		자바의 자료형 중 서로 형변환이 가능한 자료형은?
		-비슷한 자료형이라면, 서로 형변환이 가능하다!!
		숫자 : byte < shirt < int < long
									float < double
		문자 : char
		결론 : 자바에서 숫자와 문자는 서로 같은 종류의 자료형으로 볼 수 있다!!
		*/
		//int x=5;
		//char c ='k'; //'k'는 사실, 내부적으로 십진수 키코드값으로 변경이 되므로 숫자로 보아야한다!!
		//x=c;
		//자바의 기본자료형은 총 3개이고, 
		//객체자료형을 포함할 경우 자료형은 총 4개이다!
		//만일 객체자료형도 자료형이라면, 기본 자료형간의 형변환 원칙이 적용된다!!
		//객체간 형변환!! (is a) 중요!!!

		//상위자료형		//하위자료형
		//Bird d = new Duck(); //가능 메모리에 올라간 오리를 새라고 하는 거 가능
		//Duck k2 = new Bird(); //불가능.
		//Bird bird new Bird();
		//Duck d = (Duck)bird; //다운케스팅
		
		/*
		오늘의 수업주네!!
		기본자료형간의 형변환이, 어느정도는 객체자료형간에도 적용된다!!
		즉 자바의 자료형은 총4개이므로, 객체자료형간에도 서로 형변환이 적용된다!!

		주의) 기본자료형간에는 비슷한 자료형이 존재
				즉 숫자, 문자가 바로 그렇다!!
				하지만, 객체자료형간에도 서로 비슷한 자료형이라는 개념이 존재할까??
				당연히가능!!! 객체 자료형간 서로 비슷한 자료형 즉 같은 자료형
				을 정의하기 위해서는 extends키워드를 이용하면 되며, 이때 두 객체는
				is a 관계라 한다!!

		정리) 상속의 의미를 반드스 부모꺼를 맘대로 사용할 수 있다는 장점만 생각하지말고,
				또 다른 장점 중 하나가 바로 같은 자료형으로 묶을수 있다는것임

		[상속 사용이유]
		1) 코드 재사용 : 이전에 작성한 자바클래스를 재사용할 수 있다
		2) 같은 자료형 정의 : 객체간 서로 같은 자료형으로 정의 할 수있다..
		*/
	}
}
